{
  "swagger": "2.0",
  "info": {
    "title": "Kanban API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module.",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "sing up a new user",
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "description": "new user credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignUpCred"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "sign up success",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "login user",
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "description": "user credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLoginCred"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "access and refresh tokens",
            "schema": {
              "$ref": "#/definitions/Tokens"
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "refresh access token",
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "description": "user refresh token",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RefreshToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "access and refresh tokens",
            "schema": {
              "$ref": "#/definitions/Tokens"
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "user logout",
        "parameters": [],
        "responses": {
          "200": {
            "description": "logout success",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "getting a list of all users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "array of users",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "getting a user by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "user data",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/create": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "create a new user",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "new user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "created user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/update/{id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "description": "update an existing user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "user fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updated user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/delete/{id}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "user removal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "removal success",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        }
      }
    },
    "/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "getting a list of all projects",
        "parameters": [],
        "responses": {
          "200": {
            "description": "array of projects",
            "schema": {
              "$ref": "#/definitions/Projects"
            }
          }
        }
      }
    },
    "/projects/{id}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "getting a project by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "project",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        }
      }
    },
    "/projects/create": {
      "post": {
        "tags": [
          "Projects"
        ],
        "description": "create a new project",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "new project",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewProject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "created project",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        }
      }
    },
    "/projects/update/{id}": {
      "put": {
        "tags": [
          "Projects"
        ],
        "description": "update an existing project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "project fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewProject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updated project",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        }
      }
    },
    "/projects/delete/{id}": {
      "delete": {
        "tags": [
          "Projects"
        ],
        "description": "project removal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "removal success",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        }
      }
    },
    "/boards": {
      "get": {
        "tags": [
          "Boards"
        ],
        "description": "getting a list of all boards",
        "parameters": [],
        "responses": {
          "200": {
            "description": "array of boards",
            "schema": {
              "$ref": "#/definitions/Boards"
            }
          }
        }
      }
    },
    "/boards/{id}": {
      "get": {
        "tags": [
          "Boards"
        ],
        "description": "getting a board by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "board",
            "schema": {
              "$ref": "#/definitions/Board"
            }
          }
        }
      }
    },
    "/boards/create": {
      "post": {
        "tags": [
          "Boards"
        ],
        "description": "create a new board",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "new board data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewBoard"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "created board",
            "schema": {
              "$ref": "#/definitions/Boards"
            }
          }
        }
      }
    },
    "/boards/update/{id}": {
      "put": {
        "tags": [
          "Boards"
        ],
        "description": "update an existing board",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "board fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewBoard"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updated board",
            "schema": {
              "$ref": "#/definitions/Boards"
            }
          }
        }
      }
    },
    "/boards/delete/{id}": {
      "delete": {
        "tags": [
          "Boards"
        ],
        "description": "board removal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "removal success",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        }
      }
    },
    "/statuses": {
      "get": {
        "tags": [
          "Statuses"
        ],
        "description": "getting a list of all statuses",
        "parameters": [],
        "responses": {
          "200": {
            "description": "array of statuses",
            "schema": {
              "$ref": "#/definitions/Statuses"
            }
          }
        }
      }
    },
    "/statuses/{id}": {
      "get": {
        "tags": [
          "Statuses"
        ],
        "description": "getting a status by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "status",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/statuses/create": {
      "post": {
        "tags": [
          "Statuses"
        ],
        "description": "create a new status",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "new status",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "created status",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/statuses/update/{id}": {
      "put": {
        "tags": [
          "Statuses"
        ],
        "description": "update an existing status",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "status fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updated status",
            "schema": {
              "$ref": "#/definitions/Statuses"
            }
          }
        }
      }
    },
    "/statuses/delete/{id}": {
      "delete": {
        "tags": [
          "Statuses"
        ],
        "description": "status removal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "removal success",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "description": "getting a list of all tasks",
        "parameters": [],
        "responses": {
          "200": {
            "description": "array of tasks",
            "schema": {
              "$ref": "#/definitions/Tasks"
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "description": "getting a task by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "task",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      }
    },
    "/tasks/create": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "description": "create a new task",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "new task",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewTask"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "created task",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      }
    },
    "/tasks/update/{id}": {
      "put": {
        "tags": [
          "Tasks"
        ],
        "description": "update an existing task",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "task fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewTask"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updated task",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      }
    },
    "/tasks/delete": {
      "delete": {
        "tags": [
          "Tasks"
        ],
        "description": "all task removal",
        "parameters": [],
        "responses": {
          "200": {
            "description": "removal success",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        }
      }
    },
    "/tasks/delete/{id}": {
      "delete": {
        "tags": [
          "Tasks"
        ],
        "description": "task removal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "removal success",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Tokens": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxZjIxZmM1MjM3OGNjMzQzM2E3MTkxYiIsImlhdCI6MTY0MzQzNTI0MiwiZXhwIjoxNjQzNDM3MDQyfQ.j1tQjw1tK4qQBZ7Rcfvly2J5Q0THoWc7BiTnHPFIrGc"
        },
        "refreshToken": {
          "type": "string",
          "example": "ec59ea02-4610-43e5-ba81-a9fb084e82c5"
        }
      }
    },
    "RefreshToken": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string",
          "example": "ec59ea02-4610-43e5-ba81-a9fb084e82c5"
        }
      }
    },
    "SignUpCred": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "john@example.com"
        },
        "name": {
          "type": "string",
          "example": "john"
        },
        "password": {
          "type": "string",
          "example": "12345678"
        }
      }
    },
    "UserLoginCred": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "john@example.com"
        },
        "password": {
          "type": "string",
          "example": "12345678"
        }
      }
    },
    "Success": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "Projects": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Project"
      }
    },
    "Project": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "61e65cd062cdb8288b0e6484"
        },
        "name": {
          "type": "string",
          "example": "default project"
        },
        "description": {
          "type": "string",
          "example": "default project description"
        }
      }
    },
    "NewProject": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "default project"
        },
        "description": {
          "type": "string",
          "example": "default project description"
        }
      }
    },
    "Board": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "61e65d624327f14b2f7bf00c"
        },
        "name": {
          "type": "string",
          "example": "default board"
        },
        "projectId": {
          "type": "string",
          "example": "61e65cd062cdb8288b0e6484"
        }
      }
    },
    "Boards": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Board"
      }
    },
    "NewBoard": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "default board"
        },
        "projectId": {
          "type": "string",
          "example": "61e65cd062cdb8288b0e6484"
        }
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "61e7de469343e960064dce9e"
        },
        "name": {
          "type": "string",
          "example": "task 1"
        },
        "description": {
          "type": "string",
          "example": "task 1 description"
        },
        "creator": {
          "type": "string",
          "example": "61e5364f347b2493b8a42782"
        },
        "assignedTo": {
          "type": "string",
          "example": "61e5364f347b2493b8a42782"
        },
        "boardId": {
          "type": "string",
          "example": "61e65d624327f14b2f7bf00c"
        },
        "statusId": {
          "type": "string",
          "example": "61e65dfa4327f14b2f7bf00e"
        },
        "createdAt": {
          "type": "string",
          "example": "1970-01-20T00:16:25.670Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "1970-01-20T00:16:25.670Z"
        },
        "elapsedTime": {
          "type": "number",
          "example": 1641005765247
        },
        "id": {
          "type": "string",
          "example": "61e7de469343e960064dce9e"
        }
      }
    },
    "Tasks": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Task"
      }
    },
    "NewTask": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "new task"
        },
        "description": {
          "type": "string",
          "example": "new task description"
        },
        "assignedTo": {
          "type": "string",
          "example": "61e5364f347b2493b8a42782"
        },
        "boardId": {
          "type": "string",
          "example": "61e65d624327f14b2f7bf00c"
        },
        "statusId": {
          "type": "string",
          "example": "61e65dfa4327f14b2f7bf00e"
        },
        "elapsedTime": {
          "type": "number",
          "example": 0
        }
      }
    },
    "Status": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "61e65e4f5914c628f9ae5656"
        },
        "name": {
          "type": "string",
          "example": "In progress"
        },
        "boardIds": {
          "type": "array",
          "example": [
            "61e65d624327f14b2f7bf00c"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Statuses": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Status"
      }
    },
    "NewStatus": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "new status name"
        },
        "boardIds": {
          "type": "array",
          "example": [
            "61e65d624327f14b2f7bf00c"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "61e5374b347b2493b8a42783"
        },
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "example": "akrays@aspirity.com"
        },
        "avatarLink": {
          "type": "string",
          "example": "https://avatarSite/userAvatar.jpg"
        },
        "projectIds": {
          "type": "array",
          "example": [
            "61e65d624327f14b2f7bf00c"
          ],
          "items": {
            "type": "string"
          }
        },
        "boardIds": {
          "type": "array",
          "example": [
            "61e65d624327f14b2f7bf"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Users": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/User"
      }
    },
    "NewUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "password": {
          "type": "string",
          "example": "12345678"
        },
        "email": {
          "type": "string",
          "example": "john@example.com"
        },
        "avatarLink": {
          "type": "string",
          "example": "https://avatarSite/userAvatar.jpg"
        },
        "projectIds": {
          "type": "array",
          "example": [
            "61e65d624327f14b2f7bf00c"
          ],
          "items": {
            "type": "string"
          }
        },
        "boardIds": {
          "type": "array",
          "example": [
            "61e65d624327f14b2f7bf"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}